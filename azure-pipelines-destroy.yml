# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


pool:
  vmImage: ubuntu-latest

variables:
  rg_name: 'serviceapp-rg'
  rem_storage_account_name: 'tfstate1048584424'
  rem_container_name: 'tfstate'
  rem_key: 'terraform.tfstate'

stages:
  - stage: TFvalidate
    displayName: TF validate
    jobs: 
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformTaskV3@3
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'serv-conn'
              backendAzureRmResourceGroupName: '$(rg_name)'
              backendAzureRmStorageAccountName: '$(rem_storage_account_name)'
              backendAzureRmContainerName: '$(rem_container_name)'
              backendAzureRmKey: '$(rem_key)'
          - task: TerraformTaskV3@3
            displayName: Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'serv-conn'
          - task: TerraformTaskV3@3
            displayName: Destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              commandOptions: '--auto-approve'
              environmentServiceNameAzureRM: 'serv-conn'
